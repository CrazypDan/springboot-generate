<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.liuzw.generate.mapper.ColumnMapper">

	<resultMap id="BaseResultMap" type="com.liuzw.generate.bean.Column">
		<id column="COLUMN_NAME" jdbcType="VARCHAR" property="columnName" />
		<id column="COMMENTS" jdbcType="VARCHAR" property="columnCname" />
		<id column="DATA_TYPE" jdbcType="VARCHAR" property="dataType" />
		<id column="DATA_LENGTH" jdbcType="VARCHAR" property="dataLength" />
		<id column="IS_NULLABLE" jdbcType="VARCHAR" property="isNullable" />
	</resultMap>

	<select id="getTableAllColumns" parameterType="map" resultMap="BaseResultMap">
		<choose>
			<when test="dataBaseType == 'mysql'">
				select column_name,data_type,column_comment as comments,is_nullable,
				case when character_maximum_length > 9999 then 9999
				else character_maximum_length end as data_length
				from information_schema.columns
				where upper(table_name) = UPPER(#{tableName,jdbcType=VARCHAR})
				and upper(table_schema) = UPPER(#{dataBaseName,jdbcType=VARCHAR})
				order by ordinal_position
			</when>
			<otherwise>
				select y1.column_name,y1.data_type,y2.comments,y1.data_length
				from all_tab_columns y1,all_col_comments y2
				where y1.owner =  #{dataBaseName,jdbcType=VARCHAR}
				and y1.table_name = #{tableName,jdbcType=VARCHAR}
				and y1.column_name = y2.column_name
				and y1.table_name = y2.table_name
				order by y1.column_id
			</otherwise>
		</choose>

	</select>

	<select id="getTablePkColumns" parameterType="map" resultMap="BaseResultMap">
		<choose>
			<when test="dataBaseType == 'mysql'">
				select column_name,data_type,column_comment as comments,
				case when character_maximum_length > 9999 then 9999 else character_maximum_length end as data_length
				from information_schema.columns
				where upper(table_name) = upper(#{tableName,jdbcType=VARCHAR})
				and upper(table_schema) = upper(#{dataBaseName,jdbcType=VARCHAR})
				and column_key='pri'
				order by ordinal_position
			</when>
			<otherwise>
				select y1.column_name,y1.data_type,y2.comments,y1.data_length
				from all_tab_columns y1,all_col_comments y2,
				(select a.constraint_name, a.column_name, b.constraint_type
				from user_cons_columns a, user_constraints b
				where a.constraint_name = b.constraint_name
				and b.constraint_type = 'p'
				and a.table_name = #{tableName,jdbcType=VARCHAR}) y3
				where y1.owner = #{dataBaseName,jdbcType=VARCHAR}
				and y1.table_name = #{tableName,jdbcType=VARCHAR}
				and y1.column_name = y2.column_name
				and y1.column_name=y3.column_name
				and y1.table_name = y2.table_name
				order by y1.column_id
			</otherwise>
		</choose>
	</select>

	<select id="queryList" resultType="com.liuzw.generate.bean.Table">
		select table_name tableName, engine, table_comment tableComment, create_time createTime from information_schema.tables
		where table_schema = (select database())
		<if test="tableName != null and tableName.trim() != ''">
			and table_name like concat('%', #{tableName}, '%')
		</if>
		order by create_time desc
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>

	<select id="queryTotal" resultType="long">
		select count(*) from information_schema.tables where table_schema = (select database())
		<if test="tableName != null and tableName.trim() != ''">
			and table_name like concat('%', #{tableName}, '%')
		</if>
	</select>

</mapper> 