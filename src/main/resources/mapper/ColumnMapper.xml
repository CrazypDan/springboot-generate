<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.liuzw.generate.mapper.ColumnMapper">

    <resultMap id="BaseResultMap" type="com.liuzw.generate.bean.ColumnBean">
        <result column="column_name" jdbcType="VARCHAR" property="columnName" />
        <result column="column_comment" jdbcType="VARCHAR" property="columnComment" />
        <result column="column_type" jdbcType="VARCHAR" property="columnType" />
        <result column="is_nullable" jdbcType="VARCHAR" property="isNullable" />
        <result column="table_name" jdbcType="VARCHAR" property="tableName" />
    </resultMap>

    <select id="getTableAllColumns" resultMap="BaseResultMap">
        select column_name,data_type column_type,column_comment,is_nullable,table_name
        from information_schema.columns
        where table_schema = (select database())
        and upper(table_name) in
        <foreach collection="tableNames" item="tableName" separator="," open="(" close=")">
            upper(#{tableName,jdbcType=VARCHAR})
        </foreach>
        order by table_name

    </select>

    <select id="getTablePkColumns" resultMap="BaseResultMap">
        select column_name,data_type as column_type,column_comment,table_name
        from information_schema.columns
        where table_schema = (select database())
        and upper(table_name) in
        <foreach collection="tableNames" item="tableName" separator="," open="(" close=")">
            upper(#{tableName,jdbcType=VARCHAR})
        </foreach>
        and column_key='pri'
        order by table_name
    </select>

    <select id="getList" resultType="com.liuzw.generate.bean.TableBean">
        select table_name tableName, engine, table_comment tableComment, create_time createTime
        from information_schema.tables
        where table_schema = (select database())
        <if test="tableName != null and tableName.trim() != ''">
            and table_name like concat('%', #{tableName}, '%')
        </if>
        order by create_time desc
    </select>

    <select id="getTableInfoByTableName" resultType="com.liuzw.generate.bean.TableBean">
        select table_name tableName,table_comment tableComment
        from information_schema.tables
        where table_schema = (select database())
        and upper(table_name) in
        <foreach collection="tableNames" item="tableName" separator="," open="(" close=")">
            upper(#{tableName, jdbcType=VARCHAR})
        </foreach>
        order by create_time desc
    </select>

</mapper>